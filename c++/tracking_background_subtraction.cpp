#include < stdio.h>
#include < iostream>
#include < opencv2\opencv.hpp>
#include < opencv2/core/core.hpp>
#include < opencv2/highgui/highgui.hpp>
#include < opencv2/video/background_segm.hpp>

using namespace cv;
using namespace std;

int main()
{
	//global variables
	Mat frame; //current frame
	Mat resizeF;
	Mat fgMaskMOG; //fg mask generated by MOG method
	Mat fgMaskMOG2; //fg mask fg mask generated by MOG2 method
	Mat fgMaskGMG; //fg mask fg mask generated by MOG2 method	
	Ptr< BackgroundSubtractor> pMOG; //MOG Background subtractor
	Ptr< BackgroundSubtractor> pMOG2; //MOG2 Background subtractor
	Ptr< BackgroundSubtractorGMG> pGMG; //MOG2 Background subtractor
	pMOG = new BackgroundSubtractorMOG();
	pMOG2 = new BackgroundSubtractorMOG2();
	pGMG = new BackgroundSubtractorGMG();
	char fileName[100] = "1.mp4";
	VideoCapture stream1(fileName); 
	Mat element = getStructuringElement(MORPH_RECT, Size(3, 3), Point(1, 1));
	while (true)
	{
		Mat cameraFrame;
		if (!(stream1.read(frame))) //get one frame form video   
			break;
		resize(frame, resizeF, Size(frame.size().width / 2, frame.size().height / 2));
		pMOG->operator()(resizeF, fgMaskMOG);
		pMOG2->operator()(resizeF, fgMaskMOG2);
		pGMG->operator()(resizeF, fgMaskGMG);
		//morphologyEx(fgMaskGMG, fgMaskGMG, CV_MOP_OPEN, element); 
		imshow("Origin", resizeF);
		imshow("MOG", fgMaskMOG);
		imshow("MOG2", fgMaskMOG2);
		imshow("GMG", fgMaskGMG);
		if (waitKey(30) >= 0)
			break;
	}
	cvWaitKey();
	destroyAllWindows;
	return 0;
}